동기란 (Synchronous)
- 동시에 일어난다라는 뜻
- 어떤 것을 요청하면 이에 대한 결과가 동시에 일어난다
- 요청을 진행하면 그 결과가 주어지기 전까지는 다른것을 하지 못한다.
- 즉, 순차적으로 진행한다는 의미, 순서를 맞춰 진행

비동기란 (Asynchronous)
- 동시에 일어나지 않음을 의미합니다.
- 어떤 것에 대한 요청에 의한 결과가 동시에 일어나지 않음을 의미합니다.
- 요청을 바로 처리하지 않아도 결과가 이후에 나오게 됩니다.
- 즉, 여러 개의 요청을 동시에 처리할 수 있다는 의미

동기와 비동기에 대한 예시를 보면 

카페에 홍길동이 들어와서 주문을 하려고한다
홍길동은 바닐라라떼 한잔 주세요 이렇게 했다
동기예시 => 여기서 다른 사람 주문을 받지않고 내꺼를 만들어서 줄때까지 기다린다.
비동기 => 진동벨을 받아. 다른 사람 주문과 내가 시킨 커피도 처리해준다.

하지만 이것들은 장단점이 존재

동기는 매우 직관적, 순차적이기 때문에 어떠한 결과가 나오기 전까지 대기해야한다.
또한 서버와의 통신량이 많아지면 웹페이지의 속도와 성능이 저하될수있다.

비동기는 결과가 주어지기 전까지 다른작업을 진행할수있음. 하지만 동기와는 다르게 직관적이지 못하고 
복잡하다는 단점이 있습니다. 

이제는 blocking과 non-blocking과
blocking
- 직접 제어할수 없는 대상의 작업이 끝날 때까지 제어권을 넘겨주지 않는 것입니다.
- 사전적인 정의로는 막혀버린, 제한된 이러한 상태를 의미합니다
- 호출된 함수가 자신이 할 일을 마칠때까지 제어권을 계속 가지고서 호출한 함수에게 바로 돌려주지 않는 경우에 해당

non-blocking
- 직접 재어할수없는 대상의 작업 처리 여부와 상관이 없다.
- blocking과는 반대되는 개념이다.
- 호출된 함수가 자신이 할 일을 마치지 않았더라도 바로 제어권을 건내주는 경우에 해당된다.

근데 비동기라고 non-blocking만 포함하는것은 절대 아니다.

---------------------------------------
자바스크립트는 싱글 스레드로 작동하기 때문에 효율적인 통신을 위해서는 비동기 처리를 적절하게 사용하는것이 중요하다.

sync + blocking 
- sync : 직렬적으로 진행합니다.
- Blocking : 제어권을 넘겨주지 않습니다.

ex)
커피를 주문하면
내가 주문한 메뉴가 나오기 전까지
다른 주문을 받지 않고, 
내꺼가 나오면 다른것을 진행하는것이다.

--------------------------------------

Async + Non-blocking

Async : 병렬적으로 진행합니다.
Non-blocking : 제어권을 넘겨줍니다.

ex)
커피를 주문하면, 진동벨로 알려드린다고 진행하고
나는 내꺼를 하고, 있다가 커피를 받는 형식


