리액트 쿼리
useQuery를 호출하면 객체를 return 하는데 이 키들이다
const {
    data (네트워크 통신을 통해서 받아온 Data),
    dataUpdatedAt (데이터가 언제 업데이트 했는지),
    error (에러가 있다면 error 데이터),
    errorUpdatedAt (에러가 언제 업데이트 했는지),
    failureCount (몇번 실패 했는지),
    isError (에러인지 아닌지),
    isFetched (Fetch가 되었는지 안되었는지?),
    isFetchedAfterMount,
    inFetching (Fetch중인지 아닌지),
    isPaused (멈췄는지),
    isLoading (로딩중인지 아닌지),
    isLoadingError (로딩에러가 있는지 없는지),
    isPlaceholderData (),
    isPreviousData,
    isRefetchError,
    isRefetching.
    isStale (데이터가 오래 되었는지 안되었는지),
    isSuccess (성공했는지 아닌지),
    refetch,
    remove,
    status (상태),
    fetchStatus (Fetch상태)
} = useQuery(['queryKey'], queryFn?,{
    //3번째 함수 인자로는 옵션들을 넣을수있다.
    ex)
    staleTime: 1000 * 60 *5, //5분
})

queryKey
캐싱을 잘 사용하려면 고유한 키를 잘 사용해야한다.
고유한 키를 통한 캐싱데이터를 사용함

키는 배열로 사용한다. 그 이유는 더 자세한 키를 조합할수 있다.
ex) useQuery(['todos'],...)
ex) useQuery(['todos', 'hello'],...)

리액트 쿼리에서 주의할점
- useQuery 혹은 useInfiniteQuery의 기본 cached data 는 stale상태이다.
  그래서 미리 글로벌로 정의하거나 쿼리 쓰는곳에서 설정할수 있다.
  기본이 stale이기 때문에 계속 새로 통신하는 문제가 있었던것이다.

- 만약 예상하지 않은 refetch 상황이 나오면 그건 widow가 다시 focus했기 떄문일꺼다.
  refetchOnwindowFocus (윈도우가 focus 될때마다 refetch)

- useQuery, useInfiniteQuery를 사용하지 않으면 inactive 상태로 표기한다.
  inactive상태로 5분이 지나면 garbage collected로 넘어간다.
  즉 메모리를 자동으로 청소함 캐싱도 사라짐

  이걸 해결하려면 cacheTime을 5분 이상으로 재설정해라

리액트 쿼리 DevTools를 통헤 stale부터 안에 key data를 확인할수있다.

리액트 쿼리 업데이트하기
stale이 아닌 fresh 상태인데 백엔드 데이터의 변경한 값을 fetch하고 싶으면
ex)
해당 컴포넌트에서 useQueryClient 를 가져와야함
import {useQueryClient} from '@tanstack/react-query
const client = useQueryClient();
<button onClick={()=>{
    client.invalidateQueries(['products'])
}}>
    정보 업데이트 버튼
</button>
저 버튼을 누르면 products 키의 캐시를 새로고침 할수 있다.

